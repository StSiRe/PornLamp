#include<ESPAsyncWebServer.h>
#include<SPIFFS.h>

AsyncWebServer server(80);
/*
void LoadAnimationImages()
{
    server.on("/Images/Animations/Brightness.png", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/Images/Brightness.png");
    });
}

const char rawData[533] = {
	0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
	0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20,
	0x08, 0x03, 0x00, 0x00, 0x00, 0x44, 0xA4, 0x8A, 0xC6, 0x00, 0x00, 0x00,
	0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0E, 0xC4, 0x00, 0x00, 0x0E,
	0xC4, 0x01, 0x95, 0x2B, 0x0E, 0x1B, 0x00, 0x00, 0x00, 0x51, 0x50, 0x4C,
	0x54, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x70, 0x4C, 0x79,
	0x29, 0xFA, 0x4A, 0x00, 0x00, 0x00, 0x1B, 0x74, 0x52, 0x4E, 0x53, 0xFF,
	0x15, 0xC0, 0x01, 0xE7, 0x52, 0x04, 0x1D, 0xD6, 0x62, 0x23, 0x4A, 0xBA,
	0x69, 0x0D, 0x2D, 0xCF, 0x06, 0xA9, 0x94, 0x28, 0x82, 0x7A, 0xF3, 0x97,
	0x5B, 0x00, 0x3B, 0x31, 0x7F, 0x0A, 0x00, 0x00, 0x01, 0x43, 0x49, 0x44,
	0x41, 0x54, 0x38, 0xCB, 0x8D, 0x53, 0xD9, 0xB6, 0xC4, 0x10, 0x10, 0x6C,
	0xFB, 0x92, 0x08, 0x22, 0xAB, 0xFF, 0xFF, 0xD0, 0x8B, 0xC9, 0x0C, 0x66,
	0x39, 0xB9, 0x1E, 0x38, 0x74, 0xE9, 0xAA, 0xDE, 0x20, 0x76, 0x0B, 0x61,
	0x8C, 0xFA, 0x17, 0xB8, 0x4E, 0x8E, 0x78, 0x3E, 0x34, 0xA5, 0xBA, 0xB9,
	0x36, 0x00, 0xE6, 0x54, 0x0B, 0x50, 0x8E, 0xBD, 0x01, 0x14, 0xC8, 0xA5,
	0x52, 0x2C, 0x12, 0xD4, 0x1B, 0x00, 0x61, 0xD8, 0x8A, 0x0B, 0x91, 0xF7,
	0x0D, 0x5E, 0x52, 0x9E, 0x80, 0x38, 0x8C, 0xD9, 0x29, 0xF1, 0x9E, 0x64,
	0xC2, 0x71, 0x78, 0x17, 0x19, 0xC9, 0x44, 0xB8, 0x35, 0x61, 0x9E, 0x83,
	0xB1, 0x3C, 0x5D, 0x2A, 0x80, 0x33, 0xF5, 0x70, 0x67, 0x0F, 0x0A, 0x65,
	0xD1, 0xC3, 0x3E, 0x68, 0x15, 0xE3, 0x09, 0x80, 0x1C, 0xE0, 0x81, 0x44,
	0xC2, 0x24, 0xEC, 0xE3, 0x6A, 0xCC, 0x3A, 0xEE, 0x20, 0x59, 0x7A, 0x18,
	0x30, 0x38, 0x94, 0x3D, 0x28, 0x09, 0xE3, 0x14, 0x19, 0x4D, 0xB8, 0x29,
	0x7F, 0x9C, 0x92, 0x85, 0xB2, 0x38, 0x8D, 0x20, 0x15, 0x2F, 0x1A, 0x96,
	0x8D, 0x11, 0x2B, 0x61, 0x16, 0x51, 0x9C, 0xEB, 0xE9, 0x63, 0x14, 0x33,
	0x48, 0x4B, 0xD8, 0xB6, 0x54, 0x91, 0xFC, 0x00, 0x2C, 0xC8, 0xE9, 0x00,
	0x64, 0x16, 0x24, 0x30, 0x1C, 0xBC, 0x8B, 0xC2, 0xD2, 0x7D, 0x88, 0x27,
	0x05, 0x17, 0x98, 0x2F, 0x41, 0xEF, 0xD4, 0x76, 0x00, 0x93, 0x64, 0x08,
	0x07, 0x87, 0xB8, 0x82, 0x4B, 0x02, 0xCC, 0x05, 0x40, 0x5A, 0xA3, 0x48,
	0x0E, 0x58, 0xE3, 0x09, 0x4E, 0xBC, 0x8A, 0xB8, 0x42, 0x20, 0x24, 0xDB,
	0x00, 0x53, 0x8A, 0xB5, 0x9F, 0xD3, 0x87, 0xF4, 0x56, 0xAB, 0x6C, 0x60,
	0xF6, 0x3A, 0xDB, 0x0A, 0x40, 0x14, 0xC0, 0x29, 0xD9, 0x37, 0xC0, 0x83,
	0x22, 0x24, 0x0A, 0x8F, 0x7C, 0xEC, 0x28, 0x62, 0xA1, 0xA8, 0x22, 0xDB,
	0x3E, 0x6A, 0x44, 0x36, 0x61, 0x36, 0xEB, 0x23, 0xCC, 0x92, 0xA8, 0x6A,
	0x4F, 0x89, 0x0A, 0x4D, 0xA2, 0x6A, 0xAA, 0x9F, 0xF6, 0x2E, 0xD5, 0xB7,
	0xC5, 0xBA, 0x2F, 0xF7, 0x67, 0xC3, 0x84, 0xAE, 0x61, 0x6E, 0x5B, 0xEE,
	0x9F, 0x4D, 0x7B, 0xB5, 0x3D, 0xD1, 0xFA, 0x47, 0xDB, 0xDF, 0x0E, 0xCE,
	0xED, 0xE8, 0xDD, 0x0E, 0xEF, 0xCF, 0xF1, 0xFF, 0x03, 0x06, 0x46, 0x47,
	0x0B, 0x31, 0xF4, 0x20, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E,
	0x44, 0xAE, 0x42, 0x60, 0x82
};
String getFileText(String path)
{
    return SPIFFS.open(path).readString();
}
char* getFileByte(String path)
{
    File dat = SPIFFS.open(path);
    char data[dat.size()];
    dat.readBytes(data,dat.size());
    return data;
}
void TaskHandleClient(void *p)
{
    for(;;)
    {
        server.handleClient();
        Delay(10);
    }
    
}
String html;
String style;
char* image;

*/
void Init()
{
    /*
    html = getFileText("/Main/index.html");
    style = getFileText("/Main/style.css");
    image = getFileByte("/Main/Images/Brightness.png");
    //Main Files
    server.on("/", [](){
        server.send(200,"text/html",html);
    });  
    server.on("/style.css", [](){
        server.send(200,"text/css",style);
    });
    server.on("/Images/logo.png",[](){
        server.send_P(200,"image/png",rawData);
    });
    */
    server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/index.html", "text/html");
        Serial.println(xPortGetCoreID());
    });
    server.on("/style.css", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/style.css", "text/css");
    });
    
    //Images
    server.on("/favicon.ico", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/Images/favicon.ico");
    });

    server.on("/Images/logo.png", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/Images/logo.png");
    });
    server.on("/Images/Animations.png", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/Images/Animations.png");
    });
    server.on("/Images/Music.png", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/Images/Music.png");
    });
    server.on("/Images/Settings.png", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/Images/Settings.png");
    });
    server.on("/Images/Alarm.png", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/Images/Alarm.png");
    });
    //js files
    server.on("/Animations.js", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/Animations.js");
    });
    server.on("/data.js", HTTP_GET, [](AsyncWebServerRequest *request){
        request->send(SPIFFS, "/Main/data.js");
    });
    server.begin();
}

void ConfigServer()
{
    Init();
    //xTaskCreatePinnedToCore(TaskHandleClient,"TaskHandleClient",8192,NULL,1,NULL,0);
}
